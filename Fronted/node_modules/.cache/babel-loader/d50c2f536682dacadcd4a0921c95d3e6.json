{"remainingRequest":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\src\\components\\vue-dropdown\\vue-dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\src\\components\\vue-dropdown\\vue-dropdown.vue","mtime":1609594373399},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"dropdown\",\n  data: function data() {\n    return {\n      isBottomSectionToggled: false,\n      optionsHeight: 0,\n      optionHeight: 35,\n      width: 100,\n      configOptions: [],\n      backgroundColor: \"#cde4f5\",\n      backgroundExpandedColor: \"#fff\",\n      hoverBackgroundColor: \"#0084d4\",\n      border: \"1px solid  #232b35\",\n      borderRadius: 0,\n      textColor: \"#fff\",\n      isExpanded: false\n    };\n  },\n  components: {},\n  props: [\"config\"],\n  computed: {\n    computedStyles: function computedStyles() {\n      return [{\n        \"--options-height\": this.optionsHeight + \"px\"\n      }, {\n        \"--options-height-neg\": \"-\" + this.optionsHeight + \"px\"\n      }, {\n        \"--option-height\": this.optionHeight + \"px\"\n      }, {\n        \"--main-el-border-radius\": this.borderRadius\n      }, {\n        \"--dropdown-width\": this.width + \"px\"\n      }, {\n        \"--dropdown-background-color\": this.backgroundColor\n      }, {\n        \"--dropdown-expanded-color\": this.backgroundExpandedColor\n      }, {\n        \"--dropdown-border\": this.border\n      }, {\n        \"--dropdown-hover-background-color\": this.hoverBackgroundColor\n      }, {\n        \"--dropdown-default-text-color\": this.textColor\n      }];\n    }\n  },\n  directives: {\n    expand: {\n      inserted: function inserted(el, binding) {\n        if (binding.value !== null) {\n          var calcHeight = function calcHeight() {\n            var currentState = el.getAttribute(\"aria-expanded\");\n            el.classList.add(\"u-no-transition\");\n            el.removeAttribute(\"aria-expanded\");\n            el.style.height = null;\n            el.style.height = el.clientHeight + \"px\";\n            el.setAttribute(\"aria-expanded\", currentState);\n            setTimeout(function () {\n              el.classList.remove(\"u-no-transition\");\n            });\n          };\n\n          el.classList.add(\"expand\");\n          el.setAttribute(\"aria-expanded\", binding.value ? \"true\" : \"false\");\n          calcHeight();\n          window.addEventListener(\"resize\", calcHeight);\n        }\n      },\n      update: function update(el, binding) {\n        if (el.style.height && binding.value !== null) {\n          el.setAttribute(\"aria-expanded\", binding.value ? \"true\" : \"false\");\n        }\n      }\n    }\n  },\n  methods: {\n    toggleRiskLevels: function toggleRiskLevels() {\n      this.isExpanded = !this.isExpanded;\n    },\n    setCurrentSelectedOption: function setCurrentSelectedOption(option) {\n      this.$emit(\"setSelectedOption\", option);\n    },\n    setConfigData: function setConfigData() {\n      this.configOptions = this.config.options;\n      this.width = this.config.width;\n      this.placeholder = this.config.placeholder;\n\n      if (this.config.backgroundColor) {\n        this.backgroundColor = this.config.backgroundColor;\n      }\n\n      if (this.config.backgroundExpandedColor) {\n        this.backgroundExpandedColor = this.config.backgroundExpandedColor;\n      }\n\n      if (this.config.border) {\n        this.border = this.config.border;\n      }\n\n      if (this.config.hoverBackgroundColor) {\n        this.hoverBackgroundColor = this.config.hoverBackgroundColor;\n      }\n\n      if (this.config.textColor) {\n        this.textColor = this.config.textColor;\n      }\n\n      if (this.config.borderRadius) {\n        this.borderRadius = this.config.borderRadius;\n      }\n    },\n    setOptionsHeight: function setOptionsHeight() {\n      this.optionsHeight = this.optionHeight * this.configOptions.length;\n    }\n  },\n  created: function created() {\n    this.setConfigData();\n    this.setOptionsHeight();\n  },\n  beforeUdate: function beforeUdate() {// this.setOptionsHeight();\n  },\n  mounted: function mounted() {}\n};",{"version":3,"sources":["vue-dropdown.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div\r\n    class=\"dropdown\"\r\n    @click=\"toggleRiskLevels\"\r\n    :class=\"{ expanded: isExpanded }\"\r\n    :style=\"computedStyles\"\r\n  >\r\n    <div class=\"dropdown-label-container\">\r\n      <div class=\"dropdown-label\">\r\n        <span class=\"text\">\r\n          {{ (config.prefix ? config.prefix : \"\") + \" \"\r\n          }}{{ config.placeholder ? config.placeholder : \"\" }}\r\n        </span>\r\n        <i class=\"angle-down\" :class=\"{ toggled: isExpanded }\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-expand=\"isExpanded\" class=\"options expand\">\r\n      <div\r\n        v-for=\"option in configOptions\"\r\n        :key=\"option\"\r\n        class=\"option\"\r\n        @click=\"setCurrentSelectedOption(option);\"\r\n      >\r\n        {{ option.value }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"dropdown\",\r\n  data() {\r\n    return {\r\n      isBottomSectionToggled: false,\r\n      optionsHeight: 0,\r\n      optionHeight: 35,\r\n      width: 100,\r\n      configOptions: [],\r\n      backgroundColor: \"#cde4f5\",\r\n      backgroundExpandedColor: \"#fff\",\r\n      hoverBackgroundColor: \"#0084d4\",\r\n      border: \"1px solid  #232b35\",\r\n      borderRadius: 0,\r\n      textColor: \"#fff\",\r\n      isExpanded: false\r\n    };\r\n  },\r\n  components: {},\r\n  props: [\"config\"],\r\n  computed: {\r\n    computedStyles: function() {\r\n      return [\r\n        { \"--options-height\": this.optionsHeight + \"px\" },\r\n        { \"--options-height-neg\": \"-\" + this.optionsHeight + \"px\" },\r\n        { \"--option-height\": this.optionHeight + \"px\" },\r\n        { \"--main-el-border-radius\": this.borderRadius },\r\n        { \"--dropdown-width\": this.width + \"px\" },\r\n        { \"--dropdown-background-color\": this.backgroundColor },\r\n        { \"--dropdown-expanded-color\": this.backgroundExpandedColor },\r\n        { \"--dropdown-border\": this.border },\r\n        { \"--dropdown-hover-background-color\": this.hoverBackgroundColor },\r\n        { \"--dropdown-default-text-color\": this.textColor }\r\n      ];\r\n    }\r\n  },\r\n  directives: {\r\n    expand: {\r\n      inserted: function(el, binding) {\r\n        if (binding.value !== null) {\r\n          function calcHeight() {\r\n            const currentState = el.getAttribute(\"aria-expanded\");\r\n            el.classList.add(\"u-no-transition\");\r\n            el.removeAttribute(\"aria-expanded\");\r\n            el.style.height = null;\r\n            el.style.height = el.clientHeight + \"px\";\r\n            el.setAttribute(\"aria-expanded\", currentState);\r\n\r\n            setTimeout(function() {\r\n              el.classList.remove(\"u-no-transition\");\r\n            });\r\n          }\r\n          el.classList.add(\"expand\");\r\n          el.setAttribute(\"aria-expanded\", binding.value ? \"true\" : \"false\");\r\n          calcHeight();\r\n          window.addEventListener(\"resize\", calcHeight);\r\n        }\r\n      },\r\n      update: function(el, binding) {\r\n        if (el.style.height && binding.value !== null) {\r\n          el.setAttribute(\"aria-expanded\", binding.value ? \"true\" : \"false\");\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    toggleRiskLevels() {\r\n      this.isExpanded = !this.isExpanded;\r\n    },\r\n    setCurrentSelectedOption(option) {\r\n      this.$emit(\"setSelectedOption\", option);\r\n    },\r\n    setConfigData() {\r\n      this.configOptions = this.config.options;\r\n      this.width = this.config.width;\r\n      this.placeholder = this.config.placeholder;\r\n      if (this.config.backgroundColor) {\r\n        this.backgroundColor = this.config.backgroundColor;\r\n      }\r\n      if (this.config.backgroundExpandedColor) {\r\n        this.backgroundExpandedColor = this.config.backgroundExpandedColor;\r\n      }\r\n      if (this.config.border) {\r\n        this.border = this.config.border;\r\n      }\r\n      if (this.config.hoverBackgroundColor) {\r\n        this.hoverBackgroundColor = this.config.hoverBackgroundColor;\r\n      }\r\n      if (this.config.textColor) {\r\n        this.textColor = this.config.textColor;\r\n      }\r\n      if (this.config.borderRadius) {\r\n        this.borderRadius = this.config.borderRadius;\r\n      }\r\n    },\r\n    setOptionsHeight() {\r\n      this.optionsHeight = this.optionHeight * this.configOptions.length;\r\n    }\r\n  },\r\n  created() {\r\n    this.setConfigData();\r\n    this.setOptionsHeight();\r\n  },\r\n  beforeUdate() {\r\n    // this.setOptionsHeight();\r\n  },\r\n  mounted() {}\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"./vue-dropdown\";\r\n</style>\r\n"],"sourceRoot":"src/components/vue-dropdown"}]}