{"remainingRequest":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\src\\components\\vue-dropdown\\vue-dropdown.vue?vue&type=style&index=0&id=1d4cfd4f&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\src\\components\\vue-dropdown\\vue-dropdown.vue","mtime":1609594373399},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1609596150624},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\repfeed\\Fronted\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import \"./vue-dropdown\";\r\n",{"version":3,"sources":["vue-dropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA","file":"vue-dropdown.vue","sourceRoot":"src/components/vue-dropdown","sourcesContent":["<template>\r\n  <div\r\n    class=\"dropdown\"\r\n    @click=\"toggleRiskLevels\"\r\n    :class=\"{ expanded: isExpanded }\"\r\n    :style=\"computedStyles\"\r\n  >\r\n    <div class=\"dropdown-label-container\">\r\n      <div class=\"dropdown-label\">\r\n        <span class=\"text\">\r\n          {{ (config.prefix ? config.prefix : \"\") + \" \"\r\n          }}{{ config.placeholder ? config.placeholder : \"\" }}\r\n        </span>\r\n        <i class=\"angle-down\" :class=\"{ toggled: isExpanded }\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-expand=\"isExpanded\" class=\"options expand\">\r\n      <div\r\n        v-for=\"option in configOptions\"\r\n        :key=\"option\"\r\n        class=\"option\"\r\n        @click=\"setCurrentSelectedOption(option);\"\r\n      >\r\n        {{ option.value }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"dropdown\",\r\n  data() {\r\n    return {\r\n      isBottomSectionToggled: false,\r\n      optionsHeight: 0,\r\n      optionHeight: 35,\r\n      width: 100,\r\n      configOptions: [],\r\n      backgroundColor: \"#cde4f5\",\r\n      backgroundExpandedColor: \"#fff\",\r\n      hoverBackgroundColor: \"#0084d4\",\r\n      border: \"1px solid  #232b35\",\r\n      borderRadius: 0,\r\n      textColor: \"#fff\",\r\n      isExpanded: false\r\n    };\r\n  },\r\n  components: {},\r\n  props: [\"config\"],\r\n  computed: {\r\n    computedStyles: function() {\r\n      return [\r\n        { \"--options-height\": this.optionsHeight + \"px\" },\r\n        { \"--options-height-neg\": \"-\" + this.optionsHeight + \"px\" },\r\n        { \"--option-height\": this.optionHeight + \"px\" },\r\n        { \"--main-el-border-radius\": this.borderRadius },\r\n        { \"--dropdown-width\": this.width + \"px\" },\r\n        { \"--dropdown-background-color\": this.backgroundColor },\r\n        { \"--dropdown-expanded-color\": this.backgroundExpandedColor },\r\n        { \"--dropdown-border\": this.border },\r\n        { \"--dropdown-hover-background-color\": this.hoverBackgroundColor },\r\n        { \"--dropdown-default-text-color\": this.textColor }\r\n      ];\r\n    }\r\n  },\r\n  directives: {\r\n    expand: {\r\n      inserted: function(el, binding) {\r\n        if (binding.value !== null) {\r\n          function calcHeight() {\r\n            const currentState = el.getAttribute(\"aria-expanded\");\r\n            el.classList.add(\"u-no-transition\");\r\n            el.removeAttribute(\"aria-expanded\");\r\n            el.style.height = null;\r\n            el.style.height = el.clientHeight + \"px\";\r\n            el.setAttribute(\"aria-expanded\", currentState);\r\n\r\n            setTimeout(function() {\r\n              el.classList.remove(\"u-no-transition\");\r\n            });\r\n          }\r\n          el.classList.add(\"expand\");\r\n          el.setAttribute(\"aria-expanded\", binding.value ? \"true\" : \"false\");\r\n          calcHeight();\r\n          window.addEventListener(\"resize\", calcHeight);\r\n        }\r\n      },\r\n      update: function(el, binding) {\r\n        if (el.style.height && binding.value !== null) {\r\n          el.setAttribute(\"aria-expanded\", binding.value ? \"true\" : \"false\");\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    toggleRiskLevels() {\r\n      this.isExpanded = !this.isExpanded;\r\n    },\r\n    setCurrentSelectedOption(option) {\r\n      this.$emit(\"setSelectedOption\", option);\r\n    },\r\n    setConfigData() {\r\n      this.configOptions = this.config.options;\r\n      this.width = this.config.width;\r\n      this.placeholder = this.config.placeholder;\r\n      if (this.config.backgroundColor) {\r\n        this.backgroundColor = this.config.backgroundColor;\r\n      }\r\n      if (this.config.backgroundExpandedColor) {\r\n        this.backgroundExpandedColor = this.config.backgroundExpandedColor;\r\n      }\r\n      if (this.config.border) {\r\n        this.border = this.config.border;\r\n      }\r\n      if (this.config.hoverBackgroundColor) {\r\n        this.hoverBackgroundColor = this.config.hoverBackgroundColor;\r\n      }\r\n      if (this.config.textColor) {\r\n        this.textColor = this.config.textColor;\r\n      }\r\n      if (this.config.borderRadius) {\r\n        this.borderRadius = this.config.borderRadius;\r\n      }\r\n    },\r\n    setOptionsHeight() {\r\n      this.optionsHeight = this.optionHeight * this.configOptions.length;\r\n    }\r\n  },\r\n  created() {\r\n    this.setConfigData();\r\n    this.setOptionsHeight();\r\n  },\r\n  beforeUdate() {\r\n    // this.setOptionsHeight();\r\n  },\r\n  mounted() {}\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"./vue-dropdown\";\r\n</style>\r\n"]}]}